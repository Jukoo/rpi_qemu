#!/usr/bin/python3


import subprocess 
import os 
import sys
import json  

CONF_REF="rpiconf.json"
system_architecture =None 
q_cli="qemu-system-arm " 

# laod  personal configuration  based on rpiconf.json 

if  not os.path.exists(CONF_REF)  or os.path.getsize(CONF_REF)  < 0x0000:
    raise OSError("file  {}  not  or Empty".format(CONF_REF))

with open ( CONF_REF , "r" ) as rpi_conf:system_architecture= json.load(rpi_conf) 
q_sys = system_architecture["Qemu_Sys_x"] 

def  qemu_build() -> str  : 
    for q_opt , statement in q_sys.items() : 
        opt = "-{} {} ".format(q_opt , statement)
        yield  opt 

for q_stdout in  qemu_build():q_cli+=q_stdout

def process_exec (cmd:str) -> int :  
    cli_process = subprocess.Popen(cmd , stdout=subprocess.PIPE , shell=True)  
    cli_process_status = cli_process.wait()
    return cli_process_status 


def main () -> None :
    if len(sys.argv) >= 2  and sys.argv[1]  == "--start": 
        process_exec(q_cli)
    else :print("use --start to start QEMU")

if __name__=="__main__" :
    try :  
        main()
    except   KeyboardInterrupt  as  kill_msg : 
        print(kill_msg)
